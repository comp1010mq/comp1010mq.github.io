---
navigation_list:
- id: 01-introduction
  title: Introduction
  links:
  - title: Welcome to the unit
    link: 01-welcome-to-the-unit.html
  - title: Conditions
    link: conditions.html
  - title: Pen and paper methodology
    link: 02-pen-and-paper-methodology.html
  - title: Compiling and running java programs from command prompt or terminal
    link: 03-compiling-executing-java-programs.html
  - title: History of Java
    link: 04-history-of-java.html
  - title: Software to install and first program
    link: 05-software-to-install.html
  - title: Some problem solving to revise COMP115/WCOM115
    link: 06-revision.html
- id: 02-static-debugging-unit-testing
  title: Static Debugging Unit Testing
  links:
  - title: What is static?
    link: 01-static.html
  - title: Debugging
    link: 02-debugging.html
  - title: Unit Testing and JUnit
    link: 03-unit-testing-junit.html
- id: 03-classes-and-objects
  title: Classes And Objects
  links:
  - title: Introduction to Object-Oriented Programming
    link: 01-object-oriented-programming.html
  - title: Defining class and creating objects
    link: 02-defining-classes-and-instantiating-objects.html
  - title: Getters and setters
    link: 03-getters-setters.html
  - title: I wish creating objects was easier (aka constructors)
    link: 04-constructors.html
  - title: Displaying objects
    link: 05-toString.html
  - title: Shallow vs. Deep copy of an object
    link: 06-shallow-and-deep-copy.html
  - title: Comparing objects
    link: 07-compareTo.html
  - title: Class containing array(s)
    link: 08-class-containing-array.html
  - title: Array of objects
    link: 09-array-of-objects.html
- id: 04-searching-and-sorting
  title: Searching And Sorting
  links:
  - title: Motivation for searching and sorting algorithms
    link: 01-motivation-for-searching-sorting-algorithms.html
  - title: Selection Sort
    link: 02-selection-sort.html
  - title: Insertion Sort
    link: 03-insertion-sort.html
  - title: Binary search
    link: 04-binary-search.html
  - title: Searching and sorting an array of objects
    link: 05-searching-and-sorting-on-array-of-objects.html
- id: 05-recursion
  title: Recursion
  links:
  - title: What is recursion?
    link: 01-what-is-recursion.html
  - title: Why should I use recursion?
    link: 02-why-should-i-use-recursion.html
  - title: When should I not use recursion?
    link: 03-when-should-i-not-use-recursion.html
  - title: What happens during a method call?
    link: 04-what-happens-during-method-calls.html
  - title: Method calling itself
    link: 05-method-calling-itself.html
  - title: First look at a recursive solution
    link: 06-first-look-at-a-recursive-solution.html
  - title: A better example
    link: 07-a-better-example.html
- id: 06-lists
  title: Lists
  links:
  - title: What are lists?
    link: 01-what-are-lists.html
  - title: Why are arrays not good enough?
    link: 02-why-are-arrays-not-good-enough.html
  - title: Built in lists in Java
    link: 03-built-in-lists-in-java.html
  - title: Enhanced for loop
    link: 04-enhanced-for-loop.html
  - title: Iterator
    link: 05-iterator.html
  - title: Custom-built arraylist
    link: 06-custom-built-arraylist.html
  - title: The Node class
    link: 07-the-node-class.html
  - title: Custom built linkedlist
    link: 08-custom-built-linkedlist.html
  - title: Important methods in custom linkedlist
    link: 09-important-methods-in-custom-linkedlist.html
---
